{"version":3,"sources":["img/ram.jpg","Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","indexValue","this","props","location","data","id","specificProfile","Data","profiles","className","src","image","width","alt","basicInformation","name","email","d","href","mobile","education","map","i","j","degree","institution","skills","cert","React","Component","Home","info","index","key","role","to","pathname","App","k","l","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a87adb8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ram.30346c7c.jpg\";","import React from 'react';\nimport './App.css';\nimport Data from './data/data.json';\nimport image from './img/ram.jpg';\n\nclass Profile extends React.Component{\n    render(){\n        var indexValue=this.props.location.data.id;\n        var specificProfile=Data.profiles[indexValue];\n        return(\n            <section className=\"parent\">\n                <div className=\"card\">\n                    <div className=\"card-top\">\n                  <img src={image} width=\"150\" alt=\"mypic\" />\n        <h3> {specificProfile.basicInformation.name} </h3>\n    <em> {specificProfile.basicInformation.email} </em>\n\n <p>{specificProfile.basicInformation.d}</p>\n                     </div>\n\n                     <div className=\"card-bottom\">\n<a href={\"mailto:\"+specificProfile.basicInformation.email}> {specificProfile.basicInformation.email}  </a> <br />\n\n<a href={\"tel:\"+specificProfile.basicInformation.mobile}> {specificProfile.basicInformation.mobile}</a>\n                     </div>\n\n                </div>\n                <div className=\"card2\">\n                    <div className=\"card-bottom\">\n                        <h2> Educational Details</h2>\n                    </div>\n\n                    <div className=\"card-top\">\n                        {specificProfile.education.map((i,j)=>(\n                        <ul>\n                            <li> {i.degree} </li>\n                        <p> {i.institution} </p>\n                        </ul>\n                        ))}\n                    </div>\n\n\n                    <div className=\"card-bottom\">\n                        <h2> Technical Skills</h2>\n                    </div>\n\n                    <div className=\"card-top\">\n                        {specificProfile.skills.map((i,j)=>(\n                        <ul>\n                            <li> {i} </li>\n                        </ul>\n                        ))}\n                    </div>\n\n\n\n                    <div className=\"card-bottom\">\n                        <h2> Certifications</h2>\n                    </div>\n\n                    <div className=\"card-top\">\n                        {specificProfile.cert.map((i,j)=>(\n                        <ul>\n                            <li> {i} </li>\n                        </ul>\n                        ))}\n                    </div>\n                    </div>\n\n\n            </section>\n        )\n    }\n}\n\nexport default Profile;\n","import React from 'react';\nimport './App.css';\nimport Profile from './Profile';\nimport Data from './data/data.json';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport image from './img/ram.jpg';\n\nfunction App(){\n  var info=Data.profiles;\n  return(\n    <section>\n\n       <BrowserRouter>\n       <header className=\"header\">\n         <Link to={{pathname:\"/sairam-profile\"}}> Home </Link>\n      {info.map((k,l)=>(\n\n        <Link to={{pathname:\"/profile\",data:{id:l}}} key={l}>{\"Profile\"+(l+1)}</Link>\n      ))}\n\n    </header> <br/> <br/>\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/sairam-profile\" component={Home} />\n\n\n      </BrowserRouter>\n\n\n      </section>\n  )\n}\n\nlet Home=()=>{\n  var info=Data.profiles;\nreturn(\n<section className=\"parent\">\n{info.map((i,index)=>(\n        <div className=\"card\" key={index}>\n          <div className=\"card-top\">\n          <img src={image} width=\"200\" alt=\"mypic\" />\n          <h2> {i.basicInformation.name} </h2>\n      <h5> <em> {i.basicInformation.role}</em></h5>\n      </div>\n\n      <div className=\"card-bottom\">\n        <a href={\"mailto:\"+i.basicInformation.email}> {i.basicInformation.email}  </a> <br />\n\n        <a href={\"tel:\"+i.basicInformation.mobile}> {i.basicInformation.mobile}</a> <br />\n        <Link to={{pathname:\"/profile\",data:{id:index}}}><p className=\"bu\"> View Profile</p></Link>\n      </div>\n        </div>\n      ))}\n</section>\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}